{"ast":null,"code":"var _jsxFileName = \"/Users/bet0/Desktop/movie-review/src/components/CreateReview.jsx\",\n  _s = $RefreshSig$();\nimport Card from './ui/Card';\nimport ReactStars from \"react-rating-stars-component\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateReview(_ref) {\n  _s();\n  let {\n    handleReviewCreate\n  } = _ref;\n  const [rating, setRating] = useState(0);\n  const [name, setName] = useState('');\n  const [comment, setComment] = useState('');\n  const [disable, setDisable] = useState(false);\n  const [validateName, setValidateName] = useState(false);\n  const [validateComment, setValidateComment] = useState(false);\n  function ratingChanged(value) {\n    setRating(value);\n  }\n  function handlename(name) {\n    if (name.length < 8) {\n      setValidateName(true);\n      setDisable(true);\n    } else {\n      setValidateName(false);\n      setDisable(false);\n    }\n    setName(name);\n  }\n  function handleComment(comment) {\n    if (name.length < 8) {\n      setValidateComment(true);\n      setDisable(true);\n    } else {\n      setValidateComment(false);\n      setDisable(false);\n    }\n    setComment(comment);\n  }\n  function makeid(length) {\n    let result = '';\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  // Add Review\n\n  function processForm() {\n    setName('');\n    setComment('');\n    setRating(0);\n    handleReviewCreate({\n      id: makeid(20),\n      rating,\n      name,\n      comment\n    });\n  }\n\n  // Styling\n\n  const nameStyle = {\n    color: 'red',\n    padding: '30px 0px'\n  };\n  const commentStyle = {\n    color: 'red',\n    padding: '30px 0px'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ReactStars, {\n        count: 5,\n        onChange: ratingChanged,\n        size: 24,\n        activeColor: \"#ffd700\",\n        value: rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name Here\",\n        className: \"nameInput\",\n        value: name,\n        onChange: e => handlename(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"comment\",\n        value: comment,\n        onChange: e => handleComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sbt-btn\",\n        disabled: `${disable === true ? 'disabled' : ''}`,\n        onClick: () => processForm(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), validateName && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: nameStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), \"* Name Must be at least 8 characters or more\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 30\n      }, this), validateComment && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: commentStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), \"* Comment Must be at least 8 characters or more\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(CreateReview, \"kejMRXnhYadqMwlh7B25B6UFkmE=\");\n_c = CreateReview;\nvar _c;\n$RefreshReg$(_c, \"CreateReview\");","map":{"version":3,"names":["Card","ReactStars","React","useState","CreateReview","handleReviewCreate","rating","setRating","name","setName","comment","setComment","disable","setDisable","validateName","setValidateName","validateComment","setValidateComment","ratingChanged","value","handlename","length","handleComment","makeid","result","characters","charactersLength","i","charAt","Math","floor","random","processForm","id","nameStyle","color","padding","commentStyle","e","target"],"sources":["/Users/bet0/Desktop/movie-review/src/components/CreateReview.jsx"],"sourcesContent":["import Card from './ui/Card'\nimport ReactStars from \"react-rating-stars-component\";\nimport React, { useState } from 'react'\n\nexport default function CreateReview({handleReviewCreate}) {\n\n    const [rating, setRating] = useState(0);\n    const [name, setName] = useState('');\n    const [comment, setComment] = useState('');\n    const [disable, setDisable] = useState(false);\n    const [validateName, setValidateName] = useState(false);\n    const [validateComment, setValidateComment] = useState(false);\n\n\n\n function ratingChanged(value)\n {\n    setRating(value);\n }\n\n function handlename(name)\n {\n\n    if(name.length < 8)\n    {\n        setValidateName(true);\n        setDisable(true);\n    }\n    else\n    {\n        setValidateName(false);\n        setDisable(false);\n    }\n    setName(name);\n }\n\n function handleComment(comment)\n {\n\n    if(name.length < 8)\n    {\n        setValidateComment(true);\n        setDisable(true);\n    }\n    else\n    {\n        setValidateComment(false);\n        setDisable(false);\n    }\n\n\n    setComment(comment);\n }\n\n function makeid(length) {\n    let result           = '';\n    let characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n\n\n\n // Add Review\n\n function processForm()\n {\n\n    setName('');\n    setComment('');\n    setRating(0);\n\n    handleReviewCreate({\n        id: makeid(20),\n        rating,\n        name,\n        comment\n    })\n }\n\n\n\n // Styling\n\n const nameStyle = {\n    color: 'red',\n    padding: '30px 0px'\n }\n\n const commentStyle = {\n    color: 'red',\n    padding: '30px 0px'\n }\n\n\n  return (\n    <>\n        <Card>\n            <label>\n                Rating    \n            </label>  \n            <ReactStars\n                count={5}\n                onChange={ratingChanged}\n                size={24}\n                activeColor=\"#ffd700\"\n                value={rating}\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Name Here\"\n                className=\"nameInput\"\n                value={name}\n                onChange={e => handlename(e.target.value)}\n            />\n\n            <textarea \n                className='comment'\n                value={comment}\n                onChange={e => handleComment(e.target.value)}\n                ></textarea>\n\n            <button \n                className='sbt-btn' \n                disabled={`${ disable === true  ? 'disabled' : ''}`}\n                onClick = {() => processForm()}\n                >\n                Save\n            </button>\n\n            {validateName && <span style={nameStyle}>\n                <hr/>\n                * Name Must be at least 8 characters or more\n            </span>}\n\n            {validateComment && <span style={commentStyle}>\n                <hr/>\n                * Comment Must be at least 8 characters or more\n            </span>}\n        </Card>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}